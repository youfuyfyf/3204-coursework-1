services:
  routerinternal:
    build: ./routerinternaldocker
    container_name: routerinternal
    hostname: routerinternal
    cap_add:
      - NET_ADMIN
    networks:
      INTERNAL:
        ipv4_address: 69.69.69.68
      INTERNALandDMZ:
        ipv4_address: 192.168.69.68
    command: >-
      sh -c "iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE &&
      iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE &&
      iptables -A FORWARD -i eth1 -j ACCEPT &&
      iptables -A FORWARD -i eth0 -j ACCEPT &&
      ip route add 172.16.0.0/29 via 192.168.69.69 &&
      tail -f /dev/null"
    tty: true

  boss:
    build: ./bossdocker
    container_name: boss
    hostname: boss
    cap_add:
      - NET_ADMIN
    networks:
      INTERNAL:
        ipv4_address: 69.69.69.69
    command: >-
      sh -c "ip route del default &&
      ip route add default via 69.69.69.68 &&
      service ssh start &&
      tail -f /dev/null"
    tty: true

  routerdmz:
    build: ./routerdmzdocker
    container_name: routerdmz
    hostname:  routerdmz
    networks:
      INTERNALandDMZ:
        ipv4_address: 192.168.69.69
      DMZ:
        ipv4_address: 172.16.0.1
    cap_add:
      - NET_ADMIN
    command: >-
      sh -c "iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE &&
      iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE &&
      iptables -A FORWARD -i eth1 -j ACCEPT &&
      iptables -A FORWARD -i eth0 -j ACCEPT &&
      ip route add 69.69.69.64/29 via 192.168.69.68 &&
      tail -f /dev/null"
    tty: true

  db:
    build: ./dbdocker
    container_name: db
    hostname: db
    # depends_on:
      # web:
        # condition: service_healthy
    environment:
      - MYSQL_ROOT_PASSWORD=abc123
      - MYSQL_DATABASE=db
    networks:
      DMZ:
        ipv4_address: 172.16.0.2
    ports:
      - "3306:3306"

  web:
    build: ./webappdocker
    container_name: web
    hostname: web
    depends_on:
      elk:
        condition: service_healthy
    networks:
      DMZ:
        ipv4_address: 172.16.0.3
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
    command: >- 
      sh -c "ip route add 69.69.69.64/29 via 172.16.0.1 &&
      service php8.1-fpm start &&
      service nginx start &&
      filebeat setup &&
      service filebeat start &&
      tail -f /dev/null"
    # healthcheck:
      # test: docker logs web | grep 'Config OK'" || exit 1
      # interval: 5s
      # retries: 120
      # start_period: 5s
      # timeout: 10s

  elk:
    build: ./elkdocker
    container_name: elk
    hostname: elk
    networks:
      DMZ:
        ipv4_address: 172.16.0.4
    ports:
      - "9200:9200"
      - "5601:5601"
      - "5044:5044"
    healthcheck:
      test: curl --fail http://127.0.0.1:9600 || exit 1
      interval: 5s
      retries: 120
      start_period: 5s
      timeout: 10s

networks:
  INTERNAL:
    name: INTERNAL
    driver: bridge
    ipam:
      config:
        - subnet: 69.69.69.64/29
          gateway: 69.69.69.70
    
  INTERNALandDMZ:
    name: INTERNALandDMZ
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.69.64/29
          gateway: 192.168.69.70
                  
  DMZ:
    name: DMZ
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/29
          gateway: 172.16.0.6
